plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.josephnk.tanager"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.josephnk.tanager"
        minSdk = 23
        targetSdk = 34
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        multiDexEnabled = true
        manifestPlaceholders += [
                scheme: "tanager"
        ]
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['debug_keyAlias']
            keyPassword keystoreProperties['debug_keyPassword']
            storeFile keystoreProperties['debug_storeFile'] ? file(keystoreProperties['debug_storeFile']) : null
            storePassword keystoreProperties['debug_storePassword']
        }
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "build-type"
    productFlavors {
        production {
            dimension "build-type"
            resValue "string", "app_name", "Tanager"
            applicationIdSuffix ""
            manifestPlaceholders.scheme = "tanager"
        }
        staging {
            dimension "build-type"
            resValue "string", "app_name", "Tanager (stg)"
            applicationIdSuffix ".stg"
            manifestPlaceholders.scheme = "tanager_stg"
        }
        development {
            dimension "build-type"
            resValue "string", "app_name", "Tanager (dev)"
            applicationIdSuffix ".dev"
            manifestPlaceholders.scheme = "tanager_dev"
        }
        qa {
            dimension "build-type"
            resValue "string", "app_name", "Tanager (qa)"
            applicationIdSuffix ".test"
            manifestPlaceholders.scheme = "tanager_test"
        }
    }
}

flutter {
    source = "../.."
}
